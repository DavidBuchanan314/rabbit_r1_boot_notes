/* GENERATED BY patchfind_lk_test.py */

#include <stdint.h>
#include <stddef.h>

struct pattern {
	const char *name;
	const uint8_t *pattern;
	const uint8_t *caremap;
	const size_t pattern_len;
	const size_t alignment;
	const size_t offset;
};

static const struct pattern PATTERNS[] = {
	{
		.name = "avb_hal_read_from_partition_ptr",
		.pattern = (uint8_t[]){0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x48},
		.caremap = (uint8_t[]){0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff},
		.pattern_len = 56,
		.alignment = 4,
		.offset = 12,
	},
	{
		.name = "printf",
		.pattern = (uint8_t[]){0x0f,0xb4,0x00,0x00,0xf0,0xb5,0x9b,0xb0},
		.caremap = (uint8_t[]){0xff,0xff,0x00,0x00,0xff,0xff,0xff,0xff},
		.pattern_len = 8,
		.alignment = 2,
		.offset = 1,
	},
	{
		.name = "handle_vboot_state",
		.pattern = (uint8_t[]){0x30,0xb5,0x83,0xb0,0x02,0xab,0x00,0x22},
		.caremap = (uint8_t[]){0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		.pattern_len = 8,
		.alignment = 2,
		.offset = 0,
	},
	{
		.name = "lcd_printf",
		.pattern = (uint8_t[]){0x0f,0xb4,0x30,0xb5,0xc9,0xb0,0x00,0x00},
		.caremap = (uint8_t[]){0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00},
		.pattern_len = 6,
		.alignment = 2,
		.offset = 1,
	},
	{
		.name = "memcpy",
		.pattern = (uint8_t[]){0x00,0x00,0x52,0xe3,0x00,0x00,0x51,0x11,0x1e,0xff,0x2f,0x01,0x31,0x40,0x2d,0xe9},
		.caremap = (uint8_t[]){0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		.pattern_len = 16,
		.alignment = 4,
		.offset = 0,
	},
};
